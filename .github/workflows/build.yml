name: Build RustDesk Windows Client with Custom Server

on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Server IP or Domain'
        required: true
      key:
        description: 'Server Key'
        required: true

jobs:
  build:
    name: Build Windows Client
    runs-on: windows-latest

    env:
      VCPKG_ROOT: C:\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows-static

    steps:
      - name: Checkout source with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install vcpkg and dependencies
        shell: powershell
        run: |
          if (!(Test-Path "$env:VCPKG_ROOT\vcpkg.exe")) {
            git clone https://github.com/microsoft/vcpkg $env:VCPKG_ROOT
            cd $env:VCPKG_ROOT
            .\bootstrap-vcpkg.bat
          }
          $env:Path += ";$env:VCPKG_ROOT"
          & "$env:VCPKG_ROOT\vcpkg.exe" install opus openssl libvpx --triplet $env:VCPKG_DEFAULT_TRIPLET

      - name: Inject Server Info
        shell: powershell
        run: |
          $settingsPath = "${{ github.workspace }}\src-tauri\settings.toml"
          if (!(Test-Path $settingsPath)) {
            Write-Host "❌ settings.toml 不存在！检查路径是否正确。"
            exit 1
          }
          (Get-Content $settingsPath) -replace 'rendezvous_server\s*=\s*".*?"', 'rendezvous_server = "${{ github.event.inputs.server }}"' | Set-Content $settingsPath
          (Get-Content $settingsPath) -replace 'key\s*=\s*".*?"', 'key = "${{ github.event.inputs.key }}"' | Set-Content $settingsPath

      - name: Build RustDesk Executable
        run: cargo build --release --bin rustdesk

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-custom
          path: target/release/rustdesk.exe
